<?xml version="1.0" encoding="UTF-8"?>
<servoyextension>
  <servoydoc>
    <plugins>
      <object publicName="textxport" qualifiedName="com.servoy.extensions.plugins.tabxport.Enabler" scriptingName="plugins.textxport">
        <properties>
          <property name="exportEnabled">
            <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
            <description><![CDATA[Enable the export feature of this plugin.]]></description>
            <summary><![CDATA[Enable the export feature of this plugin.]]></summary>
            <sample><![CDATA[plugins.textxport.exportEnabled = true;
var isEnabled = plugins.textxport.exportEnabled;]]></sample>
          </property>
          <property name="importEnabled">
            <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
            <description><![CDATA[Enable the import feature of this plugin.]]></description>
            <summary><![CDATA[Enable the import feature of this plugin.]]></summary>
            <sample><![CDATA[plugins.textxport.importEnabled = true;
var isEnabled = plugins.textxport.importEnabled;]]></sample>
          </property>
        </properties>
        <functions>
          <function name="textExport">
            <argumentsTypes>
              <argumentType typecode="com.servoy.j2db.dataprocessing.IFoundSet"/>
              <argumentType typecode="[Ljava.lang.String;"/>
            </argumentsTypes>
            <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
            <description><![CDATA[Export to text 'separated value' data (*.tab/*.csv)]]></description>
            <summary><![CDATA[Export to text 'separated value' data (*.]]></summary>
            <sample><![CDATA[//export with default separator(tab) and no header
var dataToBeWritten = plugins.textxport.textExport(forms.form1.foundset,['id','name']);]]></sample>
            <parameters>
              <parameter name="foundSet" type="com.servoy.j2db.dataprocessing.IFoundSet" typecode="com.servoy.j2db.dataprocessing.IFoundSet">
                <description><![CDATA[the foundset to export with]]></description>
              </parameter>
              <parameter name="dataProviderIds" type="com.servoy.j2db.documentation.scripting.docs.String[]" typecode="[Ljava.lang.String;">
                <description><![CDATA[the ids of the dataproviders]]></description>
              </parameter>
            </parameters>
          </function>
          <function name="textExport">
            <argumentsTypes>
              <argumentType typecode="com.servoy.j2db.dataprocessing.IFoundSet"/>
              <argumentType typecode="[Ljava.lang.String;"/>
              <argumentType typecode="java.lang.String"/>
            </argumentsTypes>
            <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
            <description><![CDATA[Export to text 'separated value' data (*.tab/*.csv)]]></description>
            <summary><![CDATA[Export to text 'separated value' data (*.]]></summary>
            <sample><![CDATA[//export with ';' separator and no header
var dataToBeWritten = plugins.textxport.textExport(forms.form1.foundset,['id','name'],';');]]></sample>
            <parameters>
              <parameter name="foundSet" type="com.servoy.j2db.dataprocessing.IFoundSet" typecode="com.servoy.j2db.dataprocessing.IFoundSet">
                <description><![CDATA[the foundset to export with]]></description>
              </parameter>
              <parameter name="dataProviderIds" type="com.servoy.j2db.documentation.scripting.docs.String[]" typecode="[Ljava.lang.String;">
                <description><![CDATA[the ids of the dataproviders]]></description>
              </parameter>
              <parameter name="separator" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String">
                <description><![CDATA[the separator of the data]]></description>
              </parameter>
            </parameters>
          </function>
          <function name="textExport">
            <argumentsTypes>
              <argumentType typecode="com.servoy.j2db.dataprocessing.IFoundSet"/>
              <argumentType typecode="[Ljava.lang.String;"/>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="boolean"/>
            </argumentsTypes>
            <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
            <description><![CDATA[Export to text 'separated value' data (*.tab/*.csv)]]></description>
            <summary><![CDATA[Export to text 'separated value' data (*.]]></summary>
            <sample><![CDATA[//export with ';' separator and header
var dataToBeWritten = plugins.textxport.textExport(forms.form1.foundset,['id','name'],';',true);]]></sample>
            <parameters>
              <parameter name="foundSet" type="com.servoy.j2db.dataprocessing.IFoundSet" typecode="com.servoy.j2db.dataprocessing.IFoundSet">
                <description><![CDATA[the foundset to export with]]></description>
              </parameter>
              <parameter name="dataProviderIds" type="com.servoy.j2db.documentation.scripting.docs.String[]" typecode="[Ljava.lang.String;">
                <description><![CDATA[the ids of the dataproviders]]></description>
              </parameter>
              <parameter name="separator" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String">
                <description><![CDATA[the separator of the data]]></description>
              </parameter>
              <parameter name="exportHeader" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean">
                <description><![CDATA[true for exporting with the table header, false for not]]></description>
              </parameter>
            </parameters>
          </function>
        </functions>
      </object>
    </plugins>
  </servoydoc>
</servoyextension>
