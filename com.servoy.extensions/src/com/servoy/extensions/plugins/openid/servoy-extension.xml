<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<servoyextension>
  <servoydoc>
    <plugins>
      <object clientSupport="wc,sc" publicName="JSAuthenticateRequest" qualifiedName="com.servoy.extensions.plugins.openid.JSAuthenticateRequest">
        <functions>
          <function clientSupport="wc,sc" name="addAttributeRequest">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="boolean"/>
            </argumentsTypes>
            <return type="void" typecode="void"/>
            <description><![CDATA[Add attribute request]]></description>
            <summary><![CDATA[Add attribute request]]></summary>
            <samples>
              <sample clientSupport="wc,sc"><![CDATA[authenticateRequest.addAttributeRequest('email','http://axschema.org/contact/email',true);]]></sample>
            </samples>
            <parameters>
              <parameter name="alias" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="schemaURI" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="required" type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
            </parameters>
          </function>
          <function clientSupport="wc,sc" name="execute">
            <argumentsTypes/>
            <return type="void" typecode="void"/>
            <description/>
            <samples>
              <sample clientSupport="wc,sc"><![CDATA[var authenticateRequest = plugins.openid.createAuthenticateRequest('https://www.google.com/accounts/o8/id',openIDLoginCallback);
authenticateRequest.addAttributeRequest('email','http://axschema.org/contact/email',true);
//see http://www.axschema.org/types/ for more attributes, not all are supported by all providers!
authenticateRequest.execute();

//sample
//function openIDLoginCallback(identifier,authenticateResult)
//{
//	var ok = false;
//	if (identifier)
//	{
//		var id = identifier.substring(identifier.lastIndexOf('=')+1)
//		application.output('id:'+id)
//		var email = authenticateResult.getAttributeValue('email')
//		application.output('email:'+email)
//		ok = security.login(email, id, ['Administrators'])
//	}
//	if (!ok)
//	{
//		application.output('Login failed')
//	}
//}]]></sample>
            </samples>
          </function>
        </functions>
      </object>
      <object clientSupport="wc,sc" publicName="JSAuthenticateResult" qualifiedName="com.servoy.extensions.plugins.openid.JSAuthenticateResult">
        <functions>
          <function clientSupport="wc,sc" name="getAttributeValue">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
            </argumentsTypes>
            <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
            <description><![CDATA[Get attribute value]]></description>
            <summary><![CDATA[Get attribute value]]></summary>
            <samples>
              <sample clientSupport="wc,sc"><![CDATA[var email = authenticateResult.getAttributeValue('email')]]></sample>
            </samples>
            <parameters>
              <parameter name="alias" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
            </parameters>
          </function>
          <function clientSupport="wc,sc" name="getAttributeValues">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
            </argumentsTypes>
            <return type="com.servoy.j2db.documentation.scripting.docs.String[]" typecode="[Ljava.lang.String;"/>
            <description><![CDATA[Get an array of attribute values]]></description>
            <summary><![CDATA[Get an array of attribute values]]></summary>
            <samples>
              <sample clientSupport="wc,sc"><![CDATA[var namesArray = authenticateResult.getAttributeValues('names')
for (var i = 0; i < namesArray.length; i++) { 
	application.output(namesArray[i]); 
}]]></sample>
            </samples>
            <parameters>
              <parameter name="alias" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
            </parameters>
          </function>
        </functions>
      </object>
      <object clientSupport="wc,sc" publicName="openid" qualifiedName="com.servoy.extensions.plugins.openid.OpenIDProvider" scriptingName="plugins.openid">
        <functions>
          <function clientSupport="wc,sc" name="createAuthenticateRequest">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="org.mozilla.javascript.Function"/>
            </argumentsTypes>
            <return type="com.servoy.extensions.plugins.openid.JSAuthenticateRequest" typecode="com.servoy.extensions.plugins.openid.JSAuthenticateRequest"/>
            <description><![CDATA[Redirect to openID provider to login, callback method will receive answer.]]></description>
            <summary><![CDATA[Redirect to openID provider to login, callback method will receive answer.]]></summary>
            <samples>
              <sample clientSupport="wc,sc"><![CDATA[var authenticateRequest = plugins.openid.createAuthenticateRequest('https://www.google.com/accounts/o8/id',openIDLoginCallback);
authenticateRequest.addAttributeRequest('email','http://axschema.org/contact/email',true);
//see http://www.axschema.org/types/ for more attributes, not all are supported by all providers!
authenticateRequest.execute();

//sample
//function openIDLoginCallback(identifier,authenticateResult)
//{
//	var ok = false;
//	if (identifier)
//	{
//		var id = identifier.substring(identifier.lastIndexOf('=')+1)
//		application.output('id:'+id)
//		var email = authenticateResult.getAttributeValue('email')
//		application.output('email:'+email)
//		ok = security.login(email, id, ['Administrators'])
//	}
//	if (!ok)
//	{
//		application.output('Login failed')
//	}
//}]]></sample>
            </samples>
            <parameters>
              <parameter name="identifier" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="callback" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"/>
            </parameters>
          </function>
        </functions>
      </object>
    </plugins>
  </servoydoc>
</servoyextension>
