<?xml version="1.0" encoding="UTF-8"?>
<!--This file is automatically generated. Don't bother editing it, because your changes will probably be lost at the next build.-->
<servoyextension>
  <servoydoc>
    <plugins>
      <object publicName="scheduler" qualifiedName="com.servoy.extensions.plugins.scheduler.SchedulerProvider" scriptingName="plugins.scheduler">
        <functions>
          <function name="addCronJob">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="org.mozilla.javascript.Function"/>
            </argumentsTypes>
            <return type="void" typecode="void"/>
            <description><![CDATA[Adds a cron job to the scheduler.]]></description>
            <summary><![CDATA[Adds a cron job to the scheduler.]]></summary>
            <sample><![CDATA[// see: http://www.quartz-scheduler.org/docs/tutorials/crontrigger.html for more info
// add a job that runs every 20 minutes after the hour (0,20,40)
plugins.scheduler.addCronJob('20mins','0 0/20 * * * ?',method)
// add a job that runs every day at 23:30 between now and 5 days from now
var dateNow = new Date();
var date5Days = new Date(dateNow.getTime()+5*24*60*60*1000);
plugins.scheduler.addCronJob('23:30','0 30 23 ? * *',method,dateNow,date5Days)]]></sample>
            <parameters>
              <parameter name="jobname" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="cronTimings" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="method" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"/>
            </parameters>
            <links>
              <link>
                <url>http://www.quartz-scheduler.org/docs/tutorials/crontrigger.html</url>
              </link>
            </links>
          </function>
          <function name="addCronJob">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="org.mozilla.javascript.Function"/>
              <argumentType typecode="java.util.Date"/>
            </argumentsTypes>
            <return type="void" typecode="void"/>
            <description><![CDATA[Adds a cron job to the scheduler.]]></description>
            <summary><![CDATA[Adds a cron job to the scheduler.]]></summary>
            <sample><![CDATA[// see: http://www.quartz-scheduler.org/docs/tutorials/crontrigger.html for more info
// add a job that runs every 20 minutes after the hour (0,20,40)
plugins.scheduler.addCronJob('20mins','0 0/20 * * * ?',method)
// add a job that runs every day at 23:30 between now and 5 days from now
var dateNow = new Date();
var date5Days = new Date(dateNow.getTime()+5*24*60*60*1000);
plugins.scheduler.addCronJob('23:30','0 30 23 ? * *',method,dateNow,date5Days)]]></sample>
            <parameters>
              <parameter name="jobname" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="cronTimings" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="method" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"/>
              <parameter name="startDate" type="com.servoy.j2db.documentation.scripting.docs.Date" typecode="java.util.Date"/>
            </parameters>
          </function>
          <function name="addCronJob">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="org.mozilla.javascript.Function"/>
              <argumentType typecode="java.util.Date"/>
              <argumentType typecode="java.util.Date"/>
            </argumentsTypes>
            <return type="void" typecode="void"/>
            <description><![CDATA[Adds a cron job to the scheduler.]]></description>
            <summary><![CDATA[Adds a cron job to the scheduler.]]></summary>
            <sample><![CDATA[// see: http://www.quartz-scheduler.org/docs/tutorials/crontrigger.html for more info
// add a job that runs every 20 minutes after the hour (0,20,40)
plugins.scheduler.addCronJob('20mins','0 0/20 * * * ?',method)
// add a job that runs every day at 23:30 between now and 5 days from now
var dateNow = new Date();
var date5Days = new Date(dateNow.getTime()+5*24*60*60*1000);
plugins.scheduler.addCronJob('23:30','0 30 23 ? * *',method,dateNow,date5Days)]]></sample>
            <parameters>
              <parameter name="jobname" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="cronTimings" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="method" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"/>
              <parameter name="startDate" type="com.servoy.j2db.documentation.scripting.docs.Date" typecode="java.util.Date"/>
              <parameter name="endDate" type="com.servoy.j2db.documentation.scripting.docs.Date" typecode="java.util.Date"/>
            </parameters>
          </function>
          <function name="addCronJob">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="org.mozilla.javascript.Function"/>
              <argumentType typecode="java.util.Date"/>
              <argumentType typecode="java.util.Date"/>
              <argumentType typecode="[Ljava.lang.Object;"/>
            </argumentsTypes>
            <return type="void" typecode="void"/>
            <description><![CDATA[Adds a cron job to the scheduler.]]></description>
            <summary><![CDATA[Adds a cron job to the scheduler.]]></summary>
            <sample><![CDATA[// see: http://www.quartz-scheduler.org/docs/tutorials/crontrigger.html for more info
// add a job that runs every 20 minutes after the hour (0,20,40)
plugins.scheduler.addCronJob('20mins','0 0/20 * * * ?',method)
// add a job that runs every day at 23:30 between now and 5 days from now
var dateNow = new Date();
var date5Days = new Date(dateNow.getTime()+5*24*60*60*1000);
plugins.scheduler.addCronJob('23:30','0 30 23 ? * *',method,dateNow,date5Days)]]></sample>
            <parameters>
              <parameter name="jobname" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="cronTimings" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="method" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"/>
              <parameter name="startDate" type="com.servoy.j2db.documentation.scripting.docs.Date" typecode="java.util.Date"/>
              <parameter name="endDate" type="com.servoy.j2db.documentation.scripting.docs.Date" typecode="java.util.Date"/>
              <parameter name="arguments" type="com.servoy.j2db.documentation.scripting.docs.Object[]" typecode="[Ljava.lang.Object;"/>
            </parameters>
          </function>
          <function name="addJob">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="java.util.Date"/>
              <argumentType typecode="org.mozilla.javascript.Function"/>
            </argumentsTypes>
            <return type="void" typecode="void"/>
            <description><![CDATA[Adds a job to the scheduler.]]></description>
            <summary><![CDATA[Adds a job to the scheduler.]]></summary>
            <sample><![CDATA[// add a job that runs at the given date (20 seconds in the future)
// and repeats that every 20 seconds for 40 times or the enddate is reached (0 for no repeats = just one call)
var startDate = new Date();
startDate.setTime(startDate.getTime()+20000);
var endDate = new Date(startDate.getTime()+100000);
plugins.scheduler.addJob('in20seconds',startDate,method,20000,40,endDate)]]></sample>
            <parameters>
              <parameter name="jobname" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="startDate" type="com.servoy.j2db.documentation.scripting.docs.Date" typecode="java.util.Date"/>
              <parameter name="method" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"/>
            </parameters>
          </function>
          <function name="addJob">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="java.util.Date"/>
              <argumentType typecode="org.mozilla.javascript.Function"/>
              <argumentType typecode="int"/>
            </argumentsTypes>
            <return type="void" typecode="void"/>
            <description><![CDATA[Adds a job to the scheduler.]]></description>
            <summary><![CDATA[Adds a job to the scheduler.]]></summary>
            <sample><![CDATA[// add a job that runs at the given date (20 seconds in the future)
// and repeats that every 20 seconds for 40 times or the enddate is reached (0 for no repeats = just one call)
var startDate = new Date();
startDate.setTime(startDate.getTime()+20000);
var endDate = new Date(startDate.getTime()+100000);
plugins.scheduler.addJob('in20seconds',startDate,method,20000,40,endDate)]]></sample>
            <parameters>
              <parameter name="jobname" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="startDate" type="com.servoy.j2db.documentation.scripting.docs.Date" typecode="java.util.Date"/>
              <parameter name="method" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"/>
              <parameter name="repeatInterval" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int">
                <description><![CDATA[ms]]></description>
              </parameter>
            </parameters>
          </function>
          <function name="addJob">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="java.util.Date"/>
              <argumentType typecode="org.mozilla.javascript.Function"/>
              <argumentType typecode="int"/>
              <argumentType typecode="int"/>
            </argumentsTypes>
            <return type="void" typecode="void"/>
            <description><![CDATA[Adds a job to the scheduler.]]></description>
            <summary><![CDATA[Adds a job to the scheduler.]]></summary>
            <sample><![CDATA[// add a job that runs at the given date (20 seconds in the future)
// and repeats that every 20 seconds for 40 times or the enddate is reached (0 for no repeats = just one call)
var startDate = new Date();
startDate.setTime(startDate.getTime()+20000);
var endDate = new Date(startDate.getTime()+100000);
plugins.scheduler.addJob('in20seconds',startDate,method,20000,40,endDate)]]></sample>
            <parameters>
              <parameter name="jobname" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="startDate" type="com.servoy.j2db.documentation.scripting.docs.Date" typecode="java.util.Date"/>
              <parameter name="method" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"/>
              <parameter name="repeatInterval" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int">
                <description><![CDATA[ms]]></description>
              </parameter>
              <parameter name="repeatCount" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
            </parameters>
          </function>
          <function name="addJob">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="java.util.Date"/>
              <argumentType typecode="org.mozilla.javascript.Function"/>
              <argumentType typecode="int"/>
              <argumentType typecode="int"/>
              <argumentType typecode="java.util.Date"/>
            </argumentsTypes>
            <return type="void" typecode="void"/>
            <description><![CDATA[Adds a job to the scheduler.]]></description>
            <summary><![CDATA[Adds a job to the scheduler.]]></summary>
            <sample><![CDATA[// add a job that runs at the given date (20 seconds in the future)
// and repeats that every 20 seconds for 40 times or the enddate is reached (0 for no repeats = just one call)
var startDate = new Date();
startDate.setTime(startDate.getTime()+20000);
var endDate = new Date(startDate.getTime()+100000);
plugins.scheduler.addJob('in20seconds',startDate,method,20000,40,endDate)]]></sample>
            <parameters>
              <parameter name="jobName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="startDate" type="com.servoy.j2db.documentation.scripting.docs.Date" typecode="java.util.Date"/>
              <parameter name="method" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"/>
              <parameter name="repeatInterval" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int">
                <description><![CDATA[ms]]></description>
              </parameter>
              <parameter name="repeatCount" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
              <parameter name="endDate" type="com.servoy.j2db.documentation.scripting.docs.Date" typecode="java.util.Date"/>
            </parameters>
          </function>
          <function name="addJob">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="java.util.Date"/>
              <argumentType typecode="org.mozilla.javascript.Function"/>
              <argumentType typecode="int"/>
              <argumentType typecode="int"/>
              <argumentType typecode="java.util.Date"/>
              <argumentType typecode="[Ljava.lang.Object;"/>
            </argumentsTypes>
            <return type="void" typecode="void"/>
            <description><![CDATA[Adds a job to the scheduler.]]></description>
            <summary><![CDATA[Adds a job to the scheduler.]]></summary>
            <sample><![CDATA[// add a job that runs at the given date (20 seconds in the future)
// and repeats that every 20 seconds for 40 times or the enddate is reached (0 for no repeats = just one call)
var startDate = new Date();
startDate.setTime(startDate.getTime()+20000);
var endDate = new Date(startDate.getTime()+100000);
plugins.scheduler.addJob('in20seconds',startDate,method,20000,40,endDate)]]></sample>
            <parameters>
              <parameter name="jobname" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="startDate" type="com.servoy.j2db.documentation.scripting.docs.Date" typecode="java.util.Date"/>
              <parameter name="method" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"/>
              <parameter name="repeatInterval" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int">
                <description><![CDATA[ms]]></description>
              </parameter>
              <parameter name="repeatCount" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
              <parameter name="endDate" type="com.servoy.j2db.documentation.scripting.docs.Date" typecode="java.util.Date"/>
              <parameter name="arguments" type="com.servoy.j2db.documentation.scripting.docs.Object[]" typecode="[Ljava.lang.Object;"/>
            </parameters>
          </function>
          <function name="addJob">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="java.util.Date"/>
              <argumentType typecode="org.mozilla.javascript.Function"/>
              <argumentType typecode="[Ljava.lang.Object;"/>
            </argumentsTypes>
            <return type="void" typecode="void"/>
            <description><![CDATA[Adds a job to the scheduler.]]></description>
            <summary><![CDATA[Adds a job to the scheduler.]]></summary>
            <sample><![CDATA[// add a job that runs at the given date (20 seconds in the future)
// and repeats that every 20 seconds for 40 times or the enddate is reached (0 for no repeats = just one call)
var startDate = new Date();
startDate.setTime(startDate.getTime()+20000);
var endDate = new Date(startDate.getTime()+100000);
plugins.scheduler.addJob('in20seconds',startDate,method,20000,40,endDate)]]></sample>
            <parameters>
              <parameter name="jobname" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="startDate" type="com.servoy.j2db.documentation.scripting.docs.Date" typecode="java.util.Date"/>
              <parameter name="method" type="com.servoy.j2db.documentation.scripting.docs.Function" typecode="org.mozilla.javascript.Function"/>
              <parameter name="arguments" type="com.servoy.j2db.documentation.scripting.docs.Object[]" typecode="[Ljava.lang.Object;"/>
            </parameters>
          </function>
          <function name="getCurrentJobNames">
            <argumentsTypes/>
            <return type="com.servoy.j2db.documentation.scripting.docs.String[]" typecode="[Ljava.lang.String;"/>
            <description><![CDATA[Returns an array with the current jobs.]]></description>
            <summary><![CDATA[Returns an array with the current jobs.]]></summary>
            <sample><![CDATA[plugins.scheduler.getCurrentJobNames()]]></sample>
          </function>
          <function name="getLastRunJobName">
            <argumentsTypes/>
            <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
            <description><![CDATA[Returns the last job run from the scheduler.]]></description>
            <summary><![CDATA[Returns the last job run from the scheduler.]]></summary>
            <sample><![CDATA[plugins.scheduler.getLastRunJobName();]]></sample>
          </function>
          <function deprecated="true" name="getLastRunnedJobName">
            <argumentsTypes/>
            <return type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
            <description/>
            <deprecated><![CDATA[Replaced by #getLastRunJobName().]]></deprecated>
            <sample/>
          </function>
          <function name="removeJob">
            <argumentsTypes>
              <argumentType typecode="java.lang.String"/>
            </argumentsTypes>
            <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
            <description><![CDATA[Removes a job from the scheduler.]]></description>
            <summary><![CDATA[Removes a job from the scheduler.]]></summary>
            <sample><![CDATA[// removes a job 'myjob' from the scheduler
plugins.scheduler.removeJob('myjob');]]></sample>
            <parameters>
              <parameter name="jobname" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
            </parameters>
          </function>
        </functions>
      </object>
    </plugins>
  </servoydoc>
</servoyextension>
