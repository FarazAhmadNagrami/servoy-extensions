<?xml version="1.0" encoding="UTF-8"?>
<servoyextension>
  <servoydoc>
    <plugins>
      <object publicName="excelxport" qualifiedName="com.servoy.extensions.plugins.excelxport.Enabler" scriptingName="plugins.excelxport">
        <properties>
          <property name="exportEnabled">
            <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
            <description><![CDATA[Enable the export feature of this plugin.]]></description>
            <summary><![CDATA[Enable the export feature of this plugin.]]></summary>
            <sample><![CDATA[plugins.excelxport.exportEnabled = true;
var isEnabled = plugins.excelxport.exportEnabled;]]></sample>
          </property>
          <property name="importEnabled">
            <return type="com.servoy.j2db.documentation.scripting.docs.Boolean" typecode="boolean"/>
            <description><![CDATA[Enable the import feature of this plugin.]]></description>
            <summary><![CDATA[Enable the import feature of this plugin.]]></summary>
            <sample><![CDATA[plugins.excelxport.importEnabled = true;
var isEnabled = plugins.excelxport.importEnabled;]]></sample>
          </property>
        </properties>
        <functions>
          <function name="excelExport">
            <argumentsTypes>
              <argumentType typecode="com.servoy.j2db.dataprocessing.IFoundSet"/>
              <argumentType typecode="[Ljava.lang.String;"/>
            </argumentsTypes>
            <return type="byte[]" typecode="[B"/>
            <description><![CDATA[Export to Excel data]]></description>
            <summary><![CDATA[Export to Excel data]]></summary>
            <sample><![CDATA[//export in new byte array
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name']);
//export by adding to templateXLS in default (new) 'Servoy Data' worksheet
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS);
//export by adding to templateXLS, in 'mySheet' worksheet, starting at default(1/1) row/column
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS, 'mySheet');
//export by adding to templateXLS, in 'mySheet' worksheet, starting at 3rd row and 5th column
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS, 'mySheet',3,5);]]></sample>
            <parameters>
              <parameter name="foundSet" type="com.servoy.j2db.dataprocessing.IFoundSet" typecode="com.servoy.j2db.dataprocessing.IFoundSet"/>
              <parameter name="dataProviderIds"/>
            </parameters>
          </function>
          <function name="excelExport">
            <argumentsTypes>
              <argumentType typecode="com.servoy.j2db.dataprocessing.IFoundSet"/>
              <argumentType typecode="[Ljava.lang.String;"/>
              <argumentType typecode="[B"/>
            </argumentsTypes>
            <return type="byte[]" typecode="[B"/>
            <description><![CDATA[Export to Excel data]]></description>
            <summary><![CDATA[Export to Excel data]]></summary>
            <sample><![CDATA[//export in new byte array
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name']);
//export by adding to templateXLS in default (new) 'Servoy Data' worksheet
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS);
//export by adding to templateXLS, in 'mySheet' worksheet, starting at default(1/1) row/column
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS, 'mySheet');
//export by adding to templateXLS, in 'mySheet' worksheet, starting at 3rd row and 5th column
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS, 'mySheet',3,5);]]></sample>
            <parameters>
              <parameter name="foundSet" type="com.servoy.j2db.dataprocessing.IFoundSet" typecode="com.servoy.j2db.dataprocessing.IFoundSet"/>
              <parameter name="dataProvidersIds" type="com.servoy.j2db.documentation.scripting.docs.String[]" typecode="[Ljava.lang.String;"/>
              <parameter name="templateXLS" type="byte[]" typecode="[B"/>
            </parameters>
          </function>
          <function name="excelExport">
            <argumentsTypes>
              <argumentType typecode="com.servoy.j2db.dataprocessing.IFoundSet"/>
              <argumentType typecode="[Ljava.lang.String;"/>
              <argumentType typecode="[B"/>
              <argumentType typecode="java.lang.String"/>
            </argumentsTypes>
            <return type="byte[]" typecode="[B"/>
            <description><![CDATA[Export to Excel data]]></description>
            <summary><![CDATA[Export to Excel data]]></summary>
            <sample><![CDATA[//export in new byte array
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name']);
//export by adding to templateXLS in default (new) 'Servoy Data' worksheet
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS);
//export by adding to templateXLS, in 'mySheet' worksheet, starting at default(1/1) row/column
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS, 'mySheet');
//export by adding to templateXLS, in 'mySheet' worksheet, starting at 3rd row and 5th column
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS, 'mySheet',3,5);]]></sample>
            <parameters>
              <parameter name="foundSet" type="com.servoy.j2db.dataprocessing.IFoundSet" typecode="com.servoy.j2db.dataprocessing.IFoundSet"/>
              <parameter name="dataProvidersIds" type="com.servoy.j2db.documentation.scripting.docs.String[]" typecode="[Ljava.lang.String;"/>
              <parameter name="templateXLS" type="byte[]" typecode="[B"/>
              <parameter name="sheetName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
            </parameters>
          </function>
          <function name="excelExport">
            <argumentsTypes>
              <argumentType typecode="com.servoy.j2db.dataprocessing.IFoundSet"/>
              <argumentType typecode="[Ljava.lang.String;"/>
              <argumentType typecode="[B"/>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="int"/>
            </argumentsTypes>
            <return type="byte[]" typecode="[B"/>
            <description><![CDATA[Export to Excel data]]></description>
            <summary><![CDATA[Export to Excel data]]></summary>
            <sample><![CDATA[//export in new byte array
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name']);
//export by adding to templateXLS in default (new) 'Servoy Data' worksheet
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS);
//export by adding to templateXLS, in 'mySheet' worksheet, starting at default(1/1) row/column
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS, 'mySheet');
//export by adding to templateXLS, in 'mySheet' worksheet, starting at 3rd row and 5th column
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS, 'mySheet',3,5);]]></sample>
            <parameters>
              <parameter name="foundSet" type="com.servoy.j2db.dataprocessing.IFoundSet" typecode="com.servoy.j2db.dataprocessing.IFoundSet"/>
              <parameter name="dataProvidersIds" type="com.servoy.j2db.documentation.scripting.docs.String[]" typecode="[Ljava.lang.String;"/>
              <parameter name="templateXLS" type="byte[]" typecode="[B"/>
              <parameter name="sheetName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="startRow" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
            </parameters>
          </function>
          <function name="excelExport">
            <argumentsTypes>
              <argumentType typecode="com.servoy.j2db.dataprocessing.IFoundSet"/>
              <argumentType typecode="[Ljava.lang.String;"/>
              <argumentType typecode="[B"/>
              <argumentType typecode="java.lang.String"/>
              <argumentType typecode="int"/>
              <argumentType typecode="int"/>
            </argumentsTypes>
            <return type="byte[]" typecode="[B"/>
            <description><![CDATA[Export to Excel data]]></description>
            <summary><![CDATA[Export to Excel data]]></summary>
            <sample><![CDATA[//export in new byte array
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name']);
//export by adding to templateXLS in default (new) 'Servoy Data' worksheet
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS);
//export by adding to templateXLS, in 'mySheet' worksheet, starting at default(1/1) row/column
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS, 'mySheet');
//export by adding to templateXLS, in 'mySheet' worksheet, starting at 3rd row and 5th column
var bytes = plugins.excelxport.excelExport(forms.form1.foundset, ['id','name'],templateXLS, 'mySheet',3,5);]]></sample>
            <parameters>
              <parameter name="foundSet" type="com.servoy.j2db.dataprocessing.IFoundSet" typecode="com.servoy.j2db.dataprocessing.IFoundSet"/>
              <parameter name="dataProvidersIds" type="com.servoy.j2db.documentation.scripting.docs.String[]" typecode="[Ljava.lang.String;"/>
              <parameter name="templateXLS" type="byte[]" typecode="[B"/>
              <parameter name="sheetName" type="com.servoy.j2db.documentation.scripting.docs.String" typecode="java.lang.String"/>
              <parameter name="startRow" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
              <parameter name="startColumn" type="com.servoy.j2db.documentation.scripting.docs.Number" typecode="int"/>
            </parameters>
          </function>
        </functions>
      </object>
    </plugins>
  </servoydoc>
</servoyextension>
